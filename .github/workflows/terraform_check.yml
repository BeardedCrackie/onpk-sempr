name: "Terraform check"

#on: workflow_dispatch

on:
  #schedule:
  #  - cron: "*/15 * * * *" # At every 15th minute
  push:
    branches:
      - "master"
    paths:
      - terraform/**

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Validate runs checks that verify whether a configuration is syntactically valid and internally consistent, regardless of any provided variables or existing state.
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
